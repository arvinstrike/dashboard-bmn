PROMPT LENGKAP: DASHBOARD STATISTIK RKBMN KOMPREHENSIF
KONTEKS PROYEK
Buatkan dashboard monitoring dan analisis RKBMN (Rencana Kebutuhan Barang Milik Negara) yang komprehensif, interaktif, dan production-ready. Dashboard ini digunakan oleh manajer, kepala bagian, dan pegawai untuk memantau pengajuan barang milik negara, menganalisis status, waktu proses, anggaran, bottleneck, dan kepatuhan SLA.

TEKNOLOGI STACK

Framework: React dengan TypeScript
Styling: Tailwind CSS (HANYA gunakan core utility classes yang ada di base Tailwind)
Charts: Recharts
Icons: lucide-react
State Management: React Hooks (useState, useEffect, useReducer)
Data Persistence: React state (JANGAN gunakan localStorage/sessionStorage)


STRUKTUR DATA REAL (DARI DATABASE)
Database Table: pengajuanrkbagian
Struktur tabel yang harus di-mapping:
typescriptinterface PengajuanRKBMN {
  // Primary
  id: number;
  
  // Identifikasi
  kode_jenis_pengajuan: string;
  kode_barang: string;
  
  // Organisasi (perlu JOIN ke tabel bagian/biro)
  id_bagian_pengusul: number;
  id_biro_pengusul: number;
  id_bagian_pelaksana: number;
  id_biro_pelaksana: number;
  nama_bagian_pengusul?: string; // dari JOIN
  nama_biro_pengusul?: string; // dari JOIN
  nama_bagian_pelaksana?: string; // dari JOIN
  nama_biro_pelaksana?: string; // dari JOIN
  
  // Program & Kegiatan
  program: string;
  kegiatan: string;
  output: string;
  tujuan_rencana: string;
  
  // Status & Timeline
  status: string; // nilai: 'draft', 'pengajuan', 'verifikasi_kbmn', 'verifikasi_perencanaan', 'disetujui', 'ditolak', 'selesai'
  tanggal_pengajuan: string; // ISO date
  tanggal_kebmn: string | null; // tanggal verifikasi KBMN
  tanggal_keperencanaan: string | null; // tanggal verifikasi Perencanaan
  tanggal_final: string | null; // tanggal final approval
  tanggal_verifikasi_tor: string | null;
  tanggal_verifikasi_lampiran: string | null;
  
  // Anggaran
  tahun_anggaran: number;
  harga_barang: number;
  total_anggaran: number;
  akun_belanja: string;
  akun_neraca: string;
  
  // Detail Barang
  uraian_barang: string; // deskripsi item
  kuantitas: number;
  
  // Kategori
  atr_nonatr: string; // 'ATR' atau 'Non-ATR'
  skema: string; // skema pengadaan
  
  // Dokumen & Lampiran
  dokumen_pendukung: string; // bisa JSON atau comma-separated
  tor_signed_path: string;
  lampiran_signed_path: string;
  
  // Keterangan & Alasan
  keterangan: string;
  alasan_pengusul_bmn: string; // alasan dari pengusul
  alasan_koordinator_bmn: string; // alasan dari koordinator
  alasan_perencanaan: string; // alasan dari perencanaan
  
  // Audit Trail
  created_at: string;
  updated_at: string;
}
Status Mapping (PENTING!)
javascriptconst STATUS_CONFIG = {
  'draft': { 
    label: 'Draft', 
    color: 'bg-gray-100 text-gray-800 border-gray-300',
    icon: 'FileEdit',
    description: 'Masih dalam penyusunan'
  },
  'pengajuan': { 
    label: 'Diajukan', 
    color: 'bg-blue-100 text-blue-800 border-blue-300',
    icon: 'Send',
    description: 'Sudah diajukan, menunggu verifikasi'
  },
  'verifikasi_kbmn': { 
    label: 'Verifikasi KBMN', 
    color: 'bg-yellow-100 text-yellow-800 border-yellow-300',
    icon: 'Clock',
    description: 'Sedang diverifikasi oleh KBMN'
  },
  'verifikasi_perencanaan': { 
    label: 'Verifikasi Perencanaan', 
    color: 'bg-yellow-100 text-yellow-800 border-yellow-300',
    icon: 'ClipboardCheck',
    description: 'Sedang diverifikasi oleh Perencanaan'
  },
  'disetujui': { 
    label: 'Disetujui', 
    color: 'bg-green-100 text-green-800 border-green-300',
    icon: 'CheckCircle',
    description: 'Pengajuan disetujui'
  },
  'ditolak': { 
    label: 'Ditolak', 
    color: 'bg-red-100 text-red-800 border-red-300',
    icon: 'XCircle',
    description: 'Pengajuan ditolak'
  },
  'selesai': { 
    label: 'Selesai', 
    color: 'bg-emerald-100 text-emerald-800 border-emerald-300',
    icon: 'CheckCheck',
    description: 'Proses selesai'
  }
};
```

### Sample Data Generator

Buatkan **30 records sample data** yang realistis dengan karakteristik:

**Distribusi Status:**
- Draft: 5% (1-2 records)
- Pengajuan: 10% (3 records)
- Verifikasi KBMN: 15% (4-5 records)
- Verifikasi Perencanaan: 10% (3 records)
- Disetujui: 20% (6 records)
- Selesai: 35% (10-11 records)
- Ditolak: 5% (1-2 records)

**Bagian/Biro (10 variasi):**
- Bagian IT, Bagian Keuangan, Bagian SDM, Bagian Umum, Bagian Logistik
- Bagian Hukum, Bagian Perencanaan, Bagian Kepegawaian, Bagian Protokol, Bagian Arsip

**Karakteristik Data:**
- Range tanggal: 6 bulan terakhir (Mei 2024 - Oktober 2024)
- Tahun anggaran: 2024
- Nilai anggaran: Rp 500.000 - Rp 50.000.000 (varied)
- Kuantitas: 1-50 unit
- 3-5 pengajuan tertunda >14 hari (untuk alerts)
- 2-3 pengajuan tertunda >30 hari (critical alerts)
- ATR/Non-ATR: 60% ATR, 40% Non-ATR
- Skema: E-Purchasing, Tender, Penunjukan Langsung, Swakelola

**Detail Item:**
- Komputer/Laptop, Printer, AC, Meja Kerja, Kursi, Lemari Arsip
- Kendaraan Dinas, Proyektor, Whiteboard, Alat Tulis Kantor
- Software License, Server, Network Equipment

---

## KOMPONEN DASHBOARD YANG HARUS DIBUAT

### 🎯 LAYOUT OVERVIEW
```
┌─────────────────────────────────────────────────────────────┐
│ HEADER                                                       │
│ [Logo] Dashboard RKBMN        [Filters] [Actions] [User]   │
└─────────────────────────────────────────────────────────────┘
┌──────────┬──────────┬──────────┬──────────┬──────────┬──────┐
│ KPI 1    │ KPI 2    │ KPI 3    │ KPI 4    │ KPI 5    │ KPI 6│
│ Total    │ Baru 30d │ Disetujui│ Tertunda │ Avg Time │ Total│
│ Pengajuan│          │          │ >14 hari │          │ Budget│
└──────────┴──────────┴──────────┴──────────┴──────────┴──────┘
┌──────────────────────────────────┬───────────────────────────┐
│ TREND LINE CHART (60%)           │ STATUS DONUT (40%)        │
│ Pengajuan & Anggaran per Bulan   │ Distribusi Status         │
│                                  ├───────────────────────────┤
│                                  │ TOP 10 BAGIAN (40%)       │
│                                  │ Bar Chart                 │
└──────────────────────────────────┴───────────────────────────┘
┌──────────────────────────────────┬───────────────────────────┐
│ APPROVAL PIPELINE (50%)          │ TIME-TO-RESOLVE (50%)     │
│ Flow Diagram / Sankey            │ Histogram Buckets         │
└──────────────────────────────────┴───────────────────────────┘
┌─────────────────────────────────────────────────────────────┐
│ ALERTS & NOTIFICATIONS PANEL                                 │
│ [Critical] [Warning] [Info]                                 │
└─────────────────────────────────────────────────────────────┘
┌─────────────────────────────────────────────────────────────┐
│ DETAILED DATA TABLE (Full Width)                            │
│ [Search] [Column Selector] [Sort] [Pagination]              │
└─────────────────────────────────────────────────────────────┘
```

---

### 1️⃣ HEADER SECTION

**Elemen:**
- Logo/Icon + Judul "Dashboard RKBMN - Monitoring & Analisis"
- Subtitle: "Tahun Anggaran 2024"

**Filter Panel (Horizontal Layout):**

1. **Periode** (Date Range Picker)
   - Preset options: 
     - Last 7 days
     - Last 30 days
     - Last 3 months
     - Last 6 months
     - This Year (2024)
     - Custom Range
   - Default: Last 6 months

2. **Bagian Pengusul** (Multi-select Dropdown)
   - Options: "Semua Bagian" + list dari data
   - Show count: "(5 dipilih)"

3. **Status** (Multi-select Chips/Tags)
   - Checkboxes dengan badge colored
   - Default: Semua status dipilih

4. **Tahun Anggaran** (Dropdown)
   - Options: 2024, 2023, 2022
   - Default: 2024

5. **Jenis** (Dropdown - BONUS)
   - ATR / Non-ATR / Semua
   - Default: Semua

6. **Skema** (Dropdown - BONUS)
   - E-Purchasing, Tender, Penunjukan Langsung, Swakelola, Semua
   - Default: Semua

**Active Filters Indicator:**
```
🔍 Filter aktif: Periode: 1 Jan - 31 Des 2024 · Bagian: IT, Keuangan · Status: Semua
[Clear All Filters]
```

**Action Buttons:**
- 🔄 Refresh (with loading spinner)
- 📊 Export (Dropdown: CSV / Excel / PDF Report)
- ➕ Buat Pengajuan Baru (Primary button)

**Info Bar:**
- "Terakhir diperbarui: 28 Okt 2024, 14:35 WIB"
- Connection status indicator (optional)

---

### 2️⃣ KPI CARDS (6 Cards Grid)

Layout: `grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4`

**Card Structure:**
```
┌─────────────────┐
│ 📊 Icon         │
│ Label           │
│ NILAI BESAR     │
│ ↗ +15% vs prev │
│ ▂▃▅▆▇ Sparkline│
└─────────────────┘
```

**6 KPI Cards:**

1. **Total Pengajuan**
   - Icon: `FileText` (lucide)
   - Value: COUNT(id) dengan filter
   - Comparison: vs periode sebelumnya
   - Color: Blue
   - Clickable: Filter table to show all

2. **Pengajuan Baru (30 Hari)**
   - Icon: `FilePlus`
   - Value: COUNT WHERE tanggal_pengajuan > (NOW - 30 days)
   - Comparison: vs 30 hari sebelumnya
   - Color: Purple
   - Clickable: Filter table to last 30 days

3. **Disetujui**
   - Icon: `CheckCircle`
   - Value: COUNT WHERE status IN ('disetujui', 'selesai')
   - Percentage: % dari total
   - Color: Green
   - Clickable: Filter table to approved status

4. **Tertunda >14 Hari**
   - Icon: `AlertCircle`
   - Value: COUNT WHERE status NOT IN ('selesai','ditolak') AND (TODAY - tanggal_pengajuan) > 14
   - Highlight: Red/Warning color jika > 5
   - Color: Red/Orange
   - Clickable: Filter table to overdue items
   - Show pulse animation if critical

5. **Rata-rata Waktu Penyelesaian**
   - Icon: `Clock`
   - Value: AVG(tanggal_final - tanggal_pengajuan) untuk records dengan tanggal_final
   - Format: "4.5 hari"
   - Target line: 7 hari (show green if below, red if above)
   - Color: Cyan
   - Tooltip: Distribution breakdown

6. **Total Anggaran**
   - Icon: `DollarSign` atau `Banknote`
   - Value: SUM(total_anggaran) dengan filter
   - Format: "Rp 1,2 M" atau "Rp 1.234.567.890"
   - Comparison: vs target/periode sebelumnya
   - Color: Emerald
   - Tooltip: Breakdown per status

**Interaction:**
- Hover: Shadow dan scale slightly
- Click: Apply filter ke tabel dan scroll ke tabel
- Loading state: Skeleton loader

---

### 3️⃣ CHARTS SECTION

#### A. TREND LINE CHART (Kiri, 60% width)

**Title:** "Trend Pengajuan & Anggaran Bulanan"

**Features:**
- **Dual Y-Axis Chart:**
  - Left Axis: Jumlah Pengajuan (bars)
  - Right Axis: Total Anggaran (line, format Rupiah)
  
- **Toggle View:**
  - Button group: [Mingguan] [Bulanan]
  - Default: Bulanan
  
- **Data Processing:**
  - Group by: DATE_FORMAT(tanggal_pengajuan, '%Y-%m') atau '%Y-W%u'
  - Aggregate: COUNT(id), SUM(total_anggaran)
  
- **Visual:**
  - Bars: Blue gradient
  - Line: Green with dots
  - Grid lines: Subtle
  - Tooltip: Custom dengan format lengkap
  
- **Interaction:**
  - Click bar/point: Drill down to that period
  - Hover: Show exact values
  - Legend: Toggle visibility

**Sample Tooltip:**
```
Oktober 2024
─────────────
Pengajuan: 12 items
Anggaran: Rp 45.000.000
Avg per item: Rp 3.750.000
[Klik untuk filter]
```

#### B. STATUS DISTRIBUTION (Kanan Atas, 40% width)

**Title:** "Distribusi Status Pengajuan"

**Type:** Donut Chart (Recharts PieChart dengan innerRadius)

**Data:**
- Group by: status
- Calculate: COUNT, SUM(total_anggaran), Percentage

**Visual:**
- Colors: Sesuai STATUS_CONFIG
- Center label: Total pengajuan
- Legend: Dengan count dan percentage
- Animation: On load

**Interaction:**
- Click segment: Filter table by status
- Hover: Show details in tooltip
- Legend click: Toggle segment

**Custom Legend:**
```
● Draft (2) - 6.7%
● Pengajuan (3) - 10.0%
● Verifikasi KBMN (5) - 16.7%
...
```

#### C. TOP 10 BAGIAN (Kanan Bawah, 40% width)

**Title:** "Top 10 Bagian Pengaju"

**Type:** Horizontal Bar Chart

**Features:**
- **Sort Toggle:**
  - Radio buttons: ( ) Jumlah Pengajuan (•) Total Anggaran
  - Default: Jumlah Pengajuan
  
- **Data:**
  - Group by: nama_bagian_pengusul
  - Aggregate: COUNT(id), SUM(total_anggaran)
  - Limit: TOP 10
  - Order by: Selected metric DESC

**Visual:**
- Bars: Gradient blue
- Labels: Bagian name (truncate if long)
- Values: Show on bar end
- X-axis: Format number/currency based on toggle

**Interaction:**
- Click bar: Filter table by bagian
- Hover: Show both metrics
- Sortable: Click to re-sort

---

### 4️⃣ ANALYSIS SECTION

#### A. APPROVAL PIPELINE (Kiri, 50% width)

**Title:** "Alur Proses & Bottleneck Analysis"

**Type:** Pipeline/Funnel Visualization atau Sankey Diagram

**Stages:**
1. **Pengajuan** (tanggal_pengajuan IS NOT NULL)
2. **Verifikasi KBMN** (tanggal_kebmn IS NOT NULL)
3. **Verifikasi Perencanaan** (tanggal_keperencanaan IS NOT NULL)
4. **Final Approval** (tanggal_final IS NOT NULL)
5. **Selesai** (status = 'selesai')

**Side branch:**
- **Ditolak** (status = 'ditolak') - from any stage

**Visual:**
- Horizontal flow
- Width represents volume
- Color: Blue for normal flow, Red for rejection
- Show numbers on each stage
- Highlight bottleneck (stage dengan drop rate tertinggi)

**Metrics Displayed:**
```
Pengajuan (30) ──→ KBMN (25) ──→ Perencanaan (20) ──→ Final (18) ──→ Selesai (15)
      ↓ 5 ditolak       ↓ 3 stuck        ↓ 2 stuck         ↓ 3 proses
Calculations:

Drop rate per stage
Average time per stage
Current stuck items per stage

Alerts:

Red highlight jika ada stage dengan >30% drop
Warning jika avg time >7 hari

B. TIME-TO-RESOLVE HISTOGRAM (Kanan, 50% width)
Title: "Distribusi Waktu Penyelesaian"
Type: Bar Chart (Histogram)
Buckets:

<3 hari (Green)
3-7 hari (Light Green)
8-14 hari (Yellow)
15-30 hari (Orange)


30 hari (Red)



Calculation:
sqlCASE 
  WHEN DATEDIFF(tanggal_final, tanggal_pengajuan) < 3 THEN '<3 hari'
  WHEN ... BETWEEN 3 AND 7 THEN '3-7 hari'
  ...
END
```

**Visual:**
- Vertical bars dengan gradient color
- Target SLA line (contoh: 7 hari) sebagai reference line
- Percentage label di atas bar
- Count label di dalam bar

**Additional Info:**
- Show median time
- Show 90th percentile
- Highlight outliers

**Tooltip:**
```
8-14 hari
─────────
Jumlah: 8 pengajuan (26.7%)
Rata-rata: 11.2 hari
Range: 8-14 hari
[Lihat detail]
```

---

### 5️⃣ ALERTS & NOTIFICATIONS PANEL

**Layout:** Horizontal cards atau Accordion

**Categories:**

#### 🔴 CRITICAL (Red)
- Pengajuan tertunda >30 hari: [count] items
- Anggaran melebihi threshold: [count] items
- Stuck di KBMN >14 hari: [count] items

#### 🟡 WARNING (Yellow)
- Pengajuan tertunda >14 hari: [count] items
- Belum ada TOR signed: [count] items
- Belum ada lampiran signed: [count] items

#### 🔵 INFO (Blue)
- Pengajuan baru hari ini: [count] items
- Menunggu verifikasi: [count] items
- Akan mencapai deadline dalam 3 hari: [count] items

**Alert Card Structure:**
```
┌──────────────────────────────────────┐
│ 🔴 [Icon] Pengajuan Tertunda >30 Hari│
│ 3 pengajuan memerlukan perhatian     │
│ [Lihat Detail →]                     │
└──────────────────────────────────────┘
```

**Interaction:**
- Click alert: Filter table to show related items
- Dismiss button: Hide alert (session only)
- Badge count on alerts section header

---

### 6️⃣ DETAILED DATA TABLE

**Title:** "Data Pengajuan Detail"

**Top Bar:**
- 🔍 Search box (placeholder: "Cari nomor, bagian, program...")
- 🎯 Column Selector (checklist dropdown)
- 📊 Density: Compact / Normal / Comfortable
- 📥 Export visible rows

**Table Columns (Default visible):**

| # | Column | Width | Sortable | Details |
|---|--------|-------|----------|---------|
| ☑ | Checkbox | 40px | No | Bulk select |
| 1 | No. Pengajuan | 120px | Yes | `id` atau kombinasi kode |
| 2 | Bagian Pengusul | 150px | Yes | `nama_bagian_pengusul` |
| 3 | Program | 200px | Yes | `program` (truncate) |
| 4 | Tanggal Ajukan | 120px | Yes | Format: DD MMM YYYY |
| 5 | Status | 150px | Yes | Badge dengan color |
| 6 | Umur (hari) | 80px | Yes | TODAY - tanggal_pengajuan |
| 7 | Kuantitas | 80px | Yes | `kuantitas` + satuan |
| 8 | Total Anggaran | 150px | Yes | Format: Rp X.XXX.XXX |
| 9 | Skema | 120px | Yes | `skema` |
| 10 | Aksi | 120px | No | Action buttons |

**Additional Columns (Hidden by default, toggle via Column Selector):**
- Kegiatan
- Output
- Jenis (ATR/Non-ATR)
- Biro Pengusul
- Bagian Pelaksana
- Kode Barang
- Akun Belanja
- Tanggal KBMN
- Tanggal Perencanaan
- Tanggal Final
- Created At
- Updated At

**Row Styling:**
- Zebra striping
- Hover: Light background
- Selected: Blue highlight
- Overdue (>14 days): Light red background
- Critical (>30 days): Red border-left (4px)

**Action Buttons (per row):**
- 👁️ View Detail (always)
- ✏️ Edit (if status = 'draft')
- ✅ Approve (if user has permission)
- ❌ Reject (if user has permission)
- 📄 Print
- 🗑️ Delete (with confirmation)

**Bulk Actions (when rows selected):**
- Approve Selected
- Reject Selected
- Export Selected
- Delete Selected

**Pagination:**
- Rows per page: [10 ▼] 25, 50, 100
- Show: "Menampilkan 1-10 dari 30 data"
- Navigation: ‹‹ ‹ 1 2 3 › ››

**Search Behavior:**
- Real-time filtering
- Search in: nomor, bagian, program, kegiatan, uraian_barang
- Debounce: 300ms
- Show: "Ditemukan 5 dari 30 data"

**Sort Behavior:**
- Click column header to sort
- Visual indicator: ↑ ↓
- Multi-sort: Hold Shift + Click

---

### 7️⃣ DETAIL MODAL

**Trigger:** Click row atau tombol View

**Size:** Large (80% viewport width, max 1200px)

**Header:**
```
┌──────────────────────────────────────────────────┐
│ 📄 Detail Pengajuan #RKBMN-2024-0123              │
│ [Status Badge]                          [X Close] │
└──────────────────────────────────────────────────┘
```

**Tab Navigation:**
```
[ ℹ️ Info Umum ] [ 📦 Item ] [ 📎 Lampiran ] [ 📊 Timeline ] [ 💬 Log ]
```

#### Tab 1: Informasi Umum

**Layout:** 2-column grid

**Left Column:**
- No. Pengajuan: {id}
- Kode Jenis: {kode_jenis_pengajuan}
- Bagian Pengusul: {nama_bagian_pengusul}
- Biro Pengusul: {nama_biro_pengusul}
- Bagian Pelaksana: {nama_bagian_pelaksana}
- Biro Pelaksana: {nama_biro_pelaksana}
- Status: [Badge]
- Jenis: {atr_nonatr}
- Skema: {skema}

**Right Column:**
- Program: {program}
- Kegiatan: {kegiatan}
- Output: {output}
- Tujuan: {tujuan_rencana}
- Tahun Anggaran: {tahun_anggaran}
- Akun Belanja: {akun_belanja}
- Akun Neraca: {akun_neraca}
- Kode Barang: {kode_barang}

**Full Width:**
- Keterangan: {keterangan} (text area style)
- Alasan Pengusul: {alasan_pengusul_bmn} (if exists, warning box)
- Alasan Koordinator: {alasan_koordinator_bmn} (if exists, warning box)
- Alasan Perencanaan: {alasan_perencanaan} (if exists, error box)

**Status Timeline Visual:**
```
Draft ──→ Pengajuan ──→ Verifikasi KBMN ──→ Verifikasi Perencanaan ──→ Final
  ✓         ✓               [CURRENT]                  ○                  ○
```

#### Tab 2: Daftar Item

**Display:**
```
┌─────────────────────────────────────────────────────────────┐
│ Uraian Barang                                                │
│ {uraian_barang}                                             │
│                                                              │
│ Detail:                                                      │
│ • Kuantitas: {kuantitas} unit                               │
│ • Harga Satuan: Rp {harga_barang}                           │
│ • Total: Rp {total_anggaran}                                │
│ • Kode Barang: {kode_barang}                                │
└─────────────────────────────────────────────────────────────┘

RINGKASAN
─────────────────────────
Total Item: 1
Total Anggaran: Rp {total_anggaran}
```

*Note: Jika kedepannya item bisa multiple, table bisa ditambahkan*

#### Tab 3: Lampiran & Dokumen

**Display:** Card grid untuk setiap dokumen
```
┌─────────────────────────┐ ┌─────────────────────────┐
│ 📄 Dokumen Pendukung    │ │ 📝 TOR Signed           │
│ {dokumen_pendukung}     │ │ {tor_signed_path}       │
│                         │ │ ✅ Terverifikasi        │
│ [Download] [Preview]    │ │ {tanggal_verifikasi_tor}│
└─────────────────────────┘ │ [Download] [Preview]    │
                            └─────────────────────────┘
┌─────────────────────────┐
│ 📋 Lampiran Signed      │
│ {lampiran_signed_path}  │
│ ✅ Terverifikasi        │
│ {tanggal_verifikasi...} │
│ [Download] [Preview]    │
└─────────────────────────┘
File Card Structure:

Icon based on file type
Filename (clickable untuk preview)
File size (if available)
Upload/Verification date
Status badge (Verified/Pending)
Action buttons

Tab 4: Timeline Proses
Display: Vertical timeline
📅 Timeline Pengajuan
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Dibuat
   28 Okt 2024, 10:30 WIB
   oleh: Admin IT
   ↓ 2 hari

✅ Diajukan
   30 Okt 2024, 14:20 WIB
   Status: Menunggu verifikasi
   ↓ 3 hari

✅ Verifikasi KBMN
   2 Nov 2024, 09:15 WIB
   oleh: Koordinator KBMN
   ↓ 5 hari

⏳ Verifikasi Perencanaan [CURRENT]
   Sejak: 7 Nov 2024
   Durasi: 3 hariRetryClaude does not have the ability to run the code it generates yet.OContinue○ Final Approval
Menunggu...
○ Selesai
Menunggu...
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
STATISTIK PROSES
─────────────────────────
Total Durasi: 13 hari (sejak pengajuan)
Rata-rata per stage: 3.25 hari
Status: Dalam proses ⚠️
Target SLA: 14 hari (sisa 1 hari)

**Timeline Item Structure:**
- Icon: ✅ (done), ⏳ (current), ○ (pending), ❌ (rejected)
- Stage name (bold if current)
- Date & time
- Actor (user who performed action)
- Duration between stages
- Notes/comments if any

#### Tab 5: Log Aktivitas

**Display:** Table of all activities
```
┌──────────────────────────────────────────────────────────────┐
│ Waktu               Aktivitas              User       Detail  │
├──────────────────────────────────────────────────────────────┤
│ 28 Okt 2024, 10:30  Dibuat                Admin IT   -       │
│ 28 Okt 2024, 10:35  Edit draft            Admin IT   -       │
│ 30 Okt 2024, 14:20  Submit pengajuan      Admin IT   -       │
│ 2 Nov 2024, 09:15   Verifikasi KBMN       Pak Budi   Approve │
│ 2 Nov 2024, 09:20   Upload TOR signed     Pak Budi   -       │
│ 7 Nov 2024, 08:45   Forward ke Perencanaan Pak Budi  -       │
└──────────────────────────────────────────────────────────────┘
```

**Footer Actions:**
```
[⬅ Kembali] [🖨 Print] [📥 Export PDF] [✏️ Edit] [✅ Approve] [❌ Reject]
```

**Action Buttons Logic:**
- Edit: Show only if status = 'draft' AND user is creator
- Approve: Show if user has permission AND status is pending approval
- Reject: Show if user has permission AND status is pending approval
- Print/Export: Always visible

---

### 8️⃣ FORM BUAT PENGAJUAN BARU

**Trigger:** Tombol "Buat Pengajuan Baru" di header

**Type:** Full-page form atau Large Modal dengan Stepper

**Stepper Progress:**
```
1. Info Dasar ━━━ 2. Program & Anggaran ━━━ 3. Detail Item ━━━ 4. Lampiran ━━━ 5. Review
   [CURRENT]           ○                      ○                 ○              ○
```

#### STEP 1: Informasi Dasar

**Fields:**
```
┌─────────────────────────────────────────────────────┐
│ Kode Jenis Pengajuan *                              │
│ [Dropdown: Pilih jenis pengajuan ▼]                │
│                                                      │
│ Bagian Pengusul *                                   │
│ [Dropdown: Pilih bagian ▼]                         │
│                                                      │
│ Biro Pengusul *                                     │
│ [Dropdown: Pilih biro ▼]                           │
│                                                      │
│ Bagian Pelaksana *                                  │
│ [Dropdown: Pilih bagian ▼]                         │
│   └─ Same as Pengusul? [☑]                         │
│                                                      │
│ Biro Pelaksana *                                    │
│ [Dropdown: Pilih biro ▼]                           │
│   └─ Same as Pengusul? [☑]                         │
│                                                      │
│ Tahun Anggaran *                                    │
│ [Dropdown: 2024 ▼] 2025, 2024, 2023               │
│                                                      │
│ Tujuan Rencana *                                    │
│ [Text area, 3 rows]                                 │
│ Max 500 karakter                                    │
│                                                      │
│ Jenis Pengajuan                                     │
│ ( ) ATR  (•) Non-ATR                               │
│                                                      │
│ Skema Pengadaan *                                   │
│ ( ) E-Purchasing                                    │
│ ( ) Tender                                          │
│ ( ) Penunjukan Langsung                            │
│ ( ) Swakelola                                       │
└─────────────────────────────────────────────────────┘

[Batal]                              [Lanjut: Program →]
```

**Validation:**
- All fields marked with * are required
- Tahun anggaran must be valid year
- Tujuan rencana: min 20 chars, max 500 chars
- Real-time validation with error messages below fields

#### STEP 2: Program & Anggaran
```
┌─────────────────────────────────────────────────────┐
│ Program *                                            │
│ [Text input or Dropdown based on tahun_anggaran]    │
│                                                      │
│ Kegiatan *                                           │
│ [Text input or Dropdown based on program]           │
│                                                      │
│ Output *                                             │
│ [Text input]                                         │
│                                                      │
│ Kode Barang *                                        │
│ [Search input with autocomplete]                    │
│ Cari berdasarkan kode atau nama barang...           │
│                                                      │
│ Akun Belanja *                                       │
│ [Dropdown: Pilih akun belanja ▼]                   │
│ Format: XXXX.XX.XX - Nama Akun                      │
│                                                      │
│ Akun Neraca *                                        │
│ [Dropdown: Pilih akun neraca ▼]                    │
│ Format: X.X.X.XX.XX - Nama Akun                     │
│                                                      │
│ Keterangan Tambahan                                  │
│ [Text area, 4 rows]                                  │
│ Jelaskan detail tambahan jika diperlukan...         │
└─────────────────────────────────────────────────────┘

[← Kembali]                         [Lanjut: Detail →]
```

**Features:**
- Autocomplete untuk kode barang dengan search
- Cascading dropdown: Program → Kegiatan
- Helper text untuk format akun
- Character counter untuk text area

#### STEP 3: Detail Item & Anggaran
```
┌─────────────────────────────────────────────────────┐
│ DETAIL BARANG                                        │
│ ───────────────────────────────────────────────────│
│                                                      │
│ Uraian/Spesifikasi Barang *                         │
│ [Text area, 5 rows]                                  │
│ Jelaskan spesifikasi lengkap barang yang diajukan...│
│ Max 1000 karakter                                    │
│                                                      │
│ Kuantitas *                                          │
│ [Number input: 1] Unit                              │
│ Min: 1, Max: 9999                                   │
│                                                      │
│ Harga Satuan (Estimasi) *                           │
│ Rp [Number input with thousand separator]           │
│ Contoh: 5.000.000                                   │
│                                                      │
│ ─────────────────────────────────────────────────  │
│ TOTAL ANGGARAN                                       │
│ Rp 5.000.000                                        │
│ (Auto-calculated: Kuantitas × Harga Satuan)         │
│ ─────────────────────────────────────────────────  │
│                                                      │
│ ⚠️ Info: Total anggaran akan divalidasi dengan      │
│    pagu anggaran bagian Anda                        │
└─────────────────────────────────────────────────────┘

[← Kembali]                      [Lanjut: Lampiran →]
```

**Logic:**
- Auto-calculate total_anggaran when kuantitas or harga_barang changes
- Format currency with thousand separators
- Show warning if exceeds budget threshold
- Validation: kuantitas > 0, harga_barang > 0

#### STEP 4: Lampiran & Dokumen
```
┌─────────────────────────────────────────────────────┐
│ UPLOAD DOKUMEN PENDUKUNG                             │
│ ───────────────────────────────────────────────────│
│                                                      │
│ 1. Dokumen Pendukung *                               │
│    [Upload Area - Drag & Drop atau Browse]          │
│    📄 Supported: PDF, DOC, DOCX, XLS, XLSX          │
│    📦 Max size: 5 MB per file                       │
│                                                      │
│    ┌──────────────────────────────────────────┐    │
│    │ 📄 Justifikasi_Pengadaan.pdf             │    │
│    │ 2.3 MB                           [❌]    │    │
│    └──────────────────────────────────────────┘    │
│                                                      │
│ 2. Term of Reference (TOR)                           │
│    [Upload Area - Drag & Drop atau Browse]          │
│    📄 Format: PDF only                              │
│    📦 Max size: 10 MB                               │
│                                                      │
│    ┌──────────────────────────────────────────┐    │
│    │ 📄 TOR_Pengadaan_Laptop_2024.pdf         │    │
│    │ 1.8 MB                           [❌]    │    │
│    └──────────────────────────────────────────┘    │
│                                                      │
│ 3. Lampiran Lainnya                                  │
│    [Upload Area - Drag & Drop atau Browse]          │
│    📄 Supported: PDF, JPG, PNG, ZIP                 │
│    📦 Max size: 10 MB                               │
│    📌 Max files: 5                                  │
│                                                      │
│    ┌──────────────────────────────────────────┐    │
│    │ 📷 Foto_Barang_Existing.jpg              │    │
│    │ 0.8 MB                           [❌]    │    │
│    └──────────────────────────────────────────┘    │
│    ┌──────────────────────────────────────────┐    │
│    │ 📄 Quotation_Vendor.pdf                  │    │
│    │ 1.2 MB                           [❌]    │    │
│    └──────────────────────────────────────────┘    │
│                                                      │
│    [+ Tambah File Lain]                             │
│                                                      │
│ ℹ️ Catatan:                                         │
│ • Dokumen harus jelas dan dapat dibaca              │
│ • Nama file sebaiknya deskriptif                    │
│ • Pastikan tidak ada data sensitif/pribadi          │
└─────────────────────────────────────────────────────┘

[← Kembali]                         [Lanjut: Review →]
```

**Features:**
- Drag & drop upload zones
- File type validation
- File size validation
- Preview thumbnail untuk images
- Progress bar saat upload
- Multiple files untuk lampiran lainnya
- Remove file button

**File Handling:**
- Store file paths/URLs in respective fields:
  - dokumen_pendukung
  - tor_signed_path (optional di form, bisa ditambah later)
  - lampiran_signed_path
- Show upload progress
- Handle upload errors gracefully

#### STEP 5: Review & Submit
```
┌─────────────────────────────────────────────────────┐
│ REVIEW PENGAJUAN                                     │
│ ───────────────────────────────────────────────────│
│                                                      │
│ ✏️ INFORMASI DASAR                        [Edit]    │
│ ───────────────────────────────────────────────────│
│ Kode Jenis: RKBMN-2024                              │
│ Bagian Pengusul: Bagian IT                          │
│ Biro Pengusul: Biro Umum                            │
│ Bagian Pelaksana: Bagian IT                         │
│ Biro Pelaksana: Biro Umum                           │
│ Tahun Anggaran: 2024                                │
│ Jenis: Non-ATR                                      │
│ Skema: E-Purchasing                                 │
│                                                      │
│ 📊 PROGRAM & ANGGARAN                     [Edit]    │
│ ───────────────────────────────────────────────────│
│ Program: Peningkatan Sarana & Prasarana            │
│ Kegiatan: Pengadaan Perangkat Komputer             │
│ Output: 10 Unit Laptop untuk Staff IT              │
│ Kode Barang: 3.02.01.01.001                        │
│ Akun Belanja: 5.2.02.01 - Belanja Modal            │
│ Akun Neraca: 1.3.01.01 - Peralatan Komputer       │
│                                                      │
│ 📦 DETAIL ITEM                            [Edit]    │
│ ───────────────────────────────────────────────────│
│ Uraian: Laptop HP Core i5, RAM 8GB, SSD 256GB...  │
│ Kuantitas: 10 Unit                                  │
│ Harga Satuan: Rp 8.500.000                         │
│ ═══════════════════════════════════════════════════│
│ TOTAL ANGGARAN: Rp 85.000.000                      │
│ ═══════════════════════════════════════════════════│
│                                                      │
│ 📎 LAMPIRAN                               [Edit]    │
│ ───────────────────────────────────────────────────│
│ ✅ Dokumen Pendukung: Justifikasi_Pengadaan.pdf    │
│ ✅ TOR: TOR_Pengadaan_Laptop_2024.pdf              │
│ ✅ Lampiran: 2 file                                 │
│                                                      │
│ ─────────────────────────────────────────────────  │
│                                                      │
│ PERNYATAAN                                           │
│ [☑] Saya menyatakan bahwa data yang diisi sudah    │
│     benar dan dapat dipertanggungjawabkan           │
│                                                      │
│ [☑] Saya memahami bahwa pengajuan ini akan melalui │
│     proses verifikasi dan approval                  │
│                                                      │
│ SIMPAN SEBAGAI:                                      │
│ ( ) Draft - Simpan dan lanjutkan nanti             │
│ (•) Submit untuk Verifikasi - Kirim pengajuan      │
└─────────────────────────────────────────────────────┘

[← Kembali]              [💾 Simpan Draft] [✅ Submit]
```

**Features:**
- Summary semua input dengan section yang collapsible
- Edit button per section → kembali ke step terkait
- Checkbox konfirmasi (required untuk submit)
- Two-action submit: Save as Draft / Submit for Review
- Show loading state saat submit

**Submit Logic:**
```javascript
if (saveAsDraft) {
  status = 'draft';
  tanggal_pengajuan = null;
} else {
  status = 'pengajuan';
  tanggal_pengajuan = NOW();
}
```

**Success Response:**
```
┌─────────────────────────────────────────────────────┐
│          ✅ PENGAJUAN BERHASIL DIBUAT               │
│                                                      │
│ Nomor Pengajuan: RKBMN-2024-0124                   │
│ Status: Diajukan                                    │
│ Tanggal: 28 Oktober 2024, 14:35 WIB                │
│                                                      │
│ Pengajuan Anda telah diteruskan ke Tim Verifikasi  │
│ KBMN. Anda akan menerima notifikasi melalui email  │
│ atau sistem ketika ada update.                      │
│                                                      │
│ [📄 Lihat Detail] [🏠 Kembali ke Dashboard]        │
└─────────────────────────────────────────────────────┘
```

---

## 🎨 UI/UX PRINCIPLES (8 GOLDEN RULES IMPLEMENTATION)

### 1. CONSISTENCY (Konsistensi)

**Color System:**
```css
/* Status Colors - HARUS KONSISTEN DI SEMUA KOMPONEN */
.status-draft { @apply bg-gray-100 text-gray-800 border-gray-300; }
.status-pengajuan { @apply bg-blue-100 text-blue-800 border-blue-300; }
.status-verifikasi-kbmn { @apply bg-yellow-100 text-yellow-800 border-yellow-300; }
.status-verifikasi-perencanaan { @apply bg-yellow-100 text-yellow-800 border-yellow-300; }
.status-disetujui { @apply bg-green-100 text-green-800 border-green-300; }
.status-ditolak { @apply bg-red-100 text-red-800 border-red-300; }
.status-selesai { @apply bg-emerald-100 text-emerald-800 border-emerald-300; }

/* Alert Colors */
.alert-critical { @apply bg-red-50 border-l-4 border-red-500 text-red-900; }
.alert-warning { @apply bg-yellow-50 border-l-4 border-yellow-500 text-yellow-900; }
.alert-info { @apply bg-blue-50 border-l-4 border-blue-500 text-blue-900; }

/* Button Styles */
.btn-primary { @apply bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg; }
.btn-secondary { @apply bg-gray-200 hover:bg-gray-300 text-gray-800 px-4 py-2 rounded-lg; }
.btn-danger { @apply bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg; }
```

**Terminology:**
- "Pengajuan" (bukan "Permohonan" atau "Request")
- "Bagian" (bukan "Departemen" atau "Unit")
- "Status" (konsisten, bukan "State" atau "Kondisi")
- "Anggaran" (bukan "Budget")

**Icons:**
- FileText = Dokumen/Pengajuan
- CheckCircle = Approved/Success
- XCircle = Rejected/Failed
- Clock = Pending/Waiting
- AlertCircle = Warning/Alert
- DollarSign = Budget/Money
- Calendar = Date/Time

### 2. SHORTCUTS (Pintasan untuk User Berpengalaman)

**Keyboard Shortcuts:**
```javascript
const KEYBOARD_SHORTCUTS = {
  'f': 'Focus on search/filter',
  'n': 'New pengajuan',
  'r': 'Refresh data',
  'e': 'Export menu',
  '/': 'Focus table search',
  'Escape': 'Close modal/clear filters',
  'Ctrl+S': 'Save draft (in form)',
  'Ctrl+Enter': 'Submit (in form)',
  'Arrow Up/Down': 'Navigate table rows',
  'Enter': 'Open detail (on focused row)',
};
```

**Implementation:**
```javascript
useEffect(() => {
  const handleKeyPress = (e) => {
    if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') return;
    
    switch(e.key.toLowerCase()) {
      case 'f':
        e.preventDefault();
        filterInputRef.current?.focus();
        break;
      case 'n':
        e.preventDefault();
        openNewPengajuanModal();
        break;
      case 'r':
        e.preventDefault();
        refreshData();
        break;
      // ... other shortcuts
    }
  };
  
  window.addEventListener('keydown', handleKeyPress);
  return () => window.removeEventListener('keydown', handleKeyPress);
}, []);
```

**Quick Actions:**
- Row hover → Show quick action buttons
- Double-click row → Open detail
- Right-click row → Context menu (View, Edit, Delete, Print)
- Click KPI card → Auto-apply filter
- Click chart segment → Drill down

**Saved Filter Presets:**
```javascript
const PRESET_FILTERS = [
  { name: 'Tertunda Saya', filters: { bagian: 'IT', status: ['verifikasi_kbmn', 'verifikasi_perencanaan'] }},
  { name: 'Butuh Approval', filters: { status: ['verifikasi_kbmn'], umur: '>7' }},
  { name: 'Overdue', filters: { status: ['!selesai', '!ditolak'], umur: '>14' }},
  { name: 'Bulan Ini', filters: { periode: 'thisMonth' }},
];
```

### 3. INFORMATIVE FEEDBACK (Umpan Balik Informatif)

**Loading States:**
```jsx
// Component-level loading
{isLoading && (
  <div className="flex items-center gap-2 text-gray-600">
    <Loader2 className="animate-spin" />
    <span>Memuat data...</span>
  </div>
)}

// Skeleton loaders for KPI cards
{isLoading ? (
  <div className="animate-pulse bg-gray-200 h-24 rounded-lg" />
) : (
  <KPICard data={data} />
)}

// Table loading with overlay
{isTableLoading && (
  <div className="absolute inset-0 bg-white/80 flex items-center justify-center">
    <Loader2 className="animate-spin w-8 h-8 text-blue-600" />
  </div>
)}
```

**Toast Notifications:**
```javascript
const showToast = (type, message, duration = 3000) => {
  // Success
  toast.success('✅ Pengajuan berhasil dibuat!', {
    description: 'No. RKBMN-2024-0124 telah diteruskan ke verifikasi',
    action: { label: 'Lihat', onClick: () => openDetail(124) }
  });
  
  // Error
  toast.error('❌ Gagal menyimpan pengajuan', {
    description: 'Koneksi terputus. Silakan coba lagi.',
    action: { label: 'Retry', onClick: () => retrySubmit() }
  });
  
  // Warning
  toast.warning('⚠️ Anggaran mendekati batas', {
    description: 'Sisa pagu: Rp 10.000.000 dari Rp 100.000.000'
  });
  
  // Info with undo
  toast.info('Pengajuan #123 dihapus', {
    action: { label: 'Undo', onClick: () => undoDelete() }
  });
};
```

**Progress Indicators:**
```jsx
// File upload progress
<div className="space-y-2">
  <div className="flex justify-between text-sm">
    <span>Uploading dokumen_pendukung.pdf</span>
    <span>67%</span>
  </div>
  <div className="h-2 bg-gray-200 rounded-full overflow-hidden">
    <div 
      className="h-full bg-blue-600 transition-all duration-300"
      style={{width: '67%'}}
    />
  </div>
</div>

// Multi-step form progress
<div className="flex items-center justify-between mb-8">
  {steps.map((step, idx) => (
    <div key={idx} className="flex items-center">
      <div className={`
        w-10 h-10 rounded-full flex items-center justify-center
        ${idx < currentStep ? 'bg-green-500 text-white' :
          idx === currentStep ? 'bg-blue-600 text-white' :
          'bg-gray-200 text-gray-500'}
      `}>
        {idx < currentStep ? <Check className="w-5 h-5" /> : idx + 1}
      </div>
      {idx < steps.length - 1 && (
        <div className={`h-1 w-24 ${idx < currentStep ? 'bg-green-500' : 'bg-gray-200'}`} />
      )}
    </div>
  ))}
</div>
```

**Active Filter Indicators:**
```jsx
<div className="flex items-center gap-2 flex-wrap p-4 bg-blue-50 border-l-4 border-blue-500">
  <span className="text-sm font-medium">🔍 Filter aktif:</span>
  
  {activePeriod && (
    <span className="inline-flex items-center gap-1 px-3 py-1 bg-white rounded-full text-sm">
      Periode: {activePeriod}
      <X className="w-3 h-3 cursor-pointer" onClick={() => clearPeriod()} />
    </span>
  )}
  
  {activeBagian.length > 0 && (
    <span className="inline-flex items-center gap-1 px-3 py-1 bg-white rounded-full text-sm">
      Bagian: {activeBagian.join(', ')}
      <X className="w-3 h-3 cursor-pointer" onClick={() => clearBagian()} />
    </span>
  )}
  
  <button 
    onClick={clearAllFilters}
    className="text-sm text-blue-600 hover:text-blue-800 font-medium"
  >
    Clear all
  </button>
</div>
```

### 4. DIALOG CLOSURE (Penutupan Dialog yang Jelas)

**After Submit Success:**
```jsx
<div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
  <div className="bg-white rounded-lg p-8 max-w-md w-full animate-scale-in">
    <div className="text-center">
      <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
        <CheckCircle className="w-10 h-10 text-green-600" />
      </div>
      
      <h3 className="text-2xl font-bold mb-2">Pengajuan Berhasil Dibuat!</h3>
      
      <div className="bg-gray-50 rounded-lg p-4 mb-4">
        <div className="text-sm text-gray-600 mb-1">Nomor Pengajuan</div>
        <div className="text-xl font-bold text-gray-900">RKBMN-2024-0124</div>
        <div className="text-sm text-gray-600 mt-2">
          Status: <span className="font-medium text-blue-600">Diajukan</span>
        </div>
        <div className="text-sm text-gray-600">
          Tanggal: 28 Oktober 2024, 14:35 WIB
        </div>
      </div>
      
      <p className="text-gray-600 mb-6">
        Pengajuan Anda telah diteruskan ke Tim Verifikasi KBMN. 
        Anda akan menerima notifikasi melalui email ketika ada update.
      </p>
      
      <div className="flex gap-3">
        <button 
          onClick={viewDetail}
          className="flex-1 btn-secondary"
        >
          📄 Lihat Detail
        </button>
        <button 
          onClick={backToDashboard}
          className="flex-1 btn-primary"
        >
          🏠 Ke Dashboard
        </button>
      </div>
    </div>
    
    {/* Auto-close countdown */}
    <div className="mt-4 text-center text-xs text-gray-500">
      Menutup otomatis dalam {countdown} detik...
    </div>
  </div>
</div>
```

**Workflow Progress Indicator:**
```jsx
// In form stepper
<div className="mb-4 p-3 bg-blue-50 rounded-lg">
  <div className="flex items-center gap-2 text-sm text-blue-900">
    <Info className="w-4 h-4" />
    <span>
      Step {currentStep} dari {totalSteps}: {stepTitles[currentStep]}
    </span>
  </div>
  <div className="mt-2 h-2 bg-blue-200 rounded-full overflow-hidden">
    <div 
      className="h-full bg-blue-600 transition-all"
      style={{width: `${(currentStep / totalSteps) * 100}%`}}
    />
  </div>
</div>
```

### 5. ERROR PREVENTION (Pencegahan Kesalahan)

**Form Validation:**
```jsx
// Real-time validation
const [errors, setErrors] = useState({});

const validateField = (name, value) => {
  const newErrors = {...errors};
  
  switch(name) {
    case 'kuantitas':
      if (!value || value < 1) {
        newErrors.kuantitas = 'Kuantitas minimal 1';
      } else if (value > 9999) {
        newErrors.kuantitas = 'Kuantitas maksimal 9999';
      } else {
        delete newErrors.kuantitas;
      }
      break;
      
    case 'total_anggaran':
      if (!value || value < 1000) {
        newErrors.total_anggaran = 'Anggaran minimal Rp 1.000';
      } else if (value > paguAnggaran) {
        newErrors.total_anggaran = `Melebihi pagu anggaran (Rp ${formatCurrency(paguAnggaran)})`;
      } else {
        delete newErrors.total_anggaran;
      }RetryClaude does not have the ability to run the code it generates yet.OContinuebreak;
case 'uraian_barang':
  if (!value || value.trim().length < 20) {
    newErrors.uraian_barang = 'Uraian minimal 20 karakter';
  } else if (value.length > 1000) {
    newErrors.uraian_barang = 'Uraian maksimal 1000 karakter';
  } else {
    delete newErrors.uraian_barang;
  }
  break;
}
setErrors(newErrors);
return Object.keys(newErrors).length === 0;
};
// Input component with validation
<div className="space-y-2">
  <label className="block text-sm font-medium text-gray-700">
    Kuantitas *
  </label>
  <input
    type="number"
    value={kuantitas}
    onChange={(e) => {
      setKuantitas(e.target.value);
      validateField('kuantitas', e.target.value);
    }}
    className={`
      w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500
      ${errors.kuantitas ? 'border-red-500' : 'border-gray-300'}
    `}
  />
  {errors.kuantitas && (
    <div className="flex items-center gap-1 text-sm text-red-600">
      <AlertCircle className="w-4 h-4" />
      <span>{errors.kuantitas}</span>
    </div>
  )}
</div>
````
Confirmation Dialogs:
jsx// Delete confirmation
const ConfirmDeleteDialog = ({ pengajuan, onConfirm, onCancel }) => (
  <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
    <div className="bg-white rounded-lg p-6 max-w-md w-full">
      <div className="flex items-start gap-4">
        <div className="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center flex-shrink-0">
          <AlertTriangle className="w-6 h-6 text-red-600" />
        </div>
        
        <div className="flex-1">
          <h3 className="text-lg font-bold text-gray-900 mb-2">
            Hapus Pengajuan?
          </h3>
          <p className="text-gray-600 mb-4">
            Anda yakin ingin menghapus pengajuan <strong>{pengajuan.id}</strong>?
            Tindakan ini tidak dapat dibatalkan.
          </p>
          
          <div className="bg-red-50 border border-red-200 rounded p-3 mb-4">
            <div className="text-sm text-red-800">
              <div>Bagian: {pengajuan.nama_bagian}</div>
              <div>Anggaran: {formatCurrency(pengajuan.total_anggaran)}</div>
            </div>
          </div>
          
          <div className="flex gap-3">
            <button onClick={onCancel} className="flex-1 btn-secondary">
              Batal
            </button>
            <button onClick={onConfirm} className="flex-1 btn-danger">
              Ya, Hapus
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
);

// Reject with reason
const RejectDialog = ({ pengajuan, onSubmit, onCancel }) => {
  const [alasan, setAlasan] = useState('');
  
  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg p-6 max-w-md w-full">
        <h3 className="text-lg font-bold mb-4">Tolak Pengajuan #{pengajuan.id}</h3>
        
        <div className="mb-4">
          <label className="block text-sm font-medium text-gray-700 mb-2">
            Alasan Penolakan *
          </label>
          <textarea
            value={alasan}
            onChange={(e) => setAlasan(e.target.value)}
            rows={4}
            placeholder="Jelaskan alasan penolakan..."
            className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500"
          />
          {alasan.length > 0 && (
            <div className="text-xs text-gray-500 mt-1">
              {alasan.length}/500 karakter
            </div>
          )}
        </div>
        
        <div className="flex gap-3">
          <button onClick={onCancel} className="flex-1 btn-secondary">
            Batal
          </button>
          <button 
            onClick={() => onSubmit(alasan)}
            disabled={alasan.trim().length < 10}
            className="flex-1 btn-danger disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Tolak Pengajuan
          </button>
        </div>
      </div>
    </div>
  );
};
Unsaved Changes Warning:
jsxconst useUnsavedChanges = (isDirty) => {
  useEffect(() => {
    const handleBeforeUnload = (e) => {
      if (isDirty) {
        e.preventDefault();
        e.returnValue = '';
      }
    };
    
    window.addEventListener('beforeunload', handleBeforeUnload);
    return () => window.removeEventListener('beforeunload', handleBeforeUnload);
  }, [isDirty]);
};

// In form component
const [formData, setFormData] = useState(initialData);
const isDirty = JSON.stringify(formData) !== JSON.stringify(initialData);

useUnsavedChanges(isDirty);

// Show warning when navigating away
const handleCancel = () => {
  if (isDirty) {
    if (confirm('Anda memiliki perubahan yang belum disimpan. Yakin ingin keluar?')) {
      onClose();
    }
  } else {
    onClose();
  }
};
Disabled States:
jsx// Disable submit until all required fields filled
const isFormValid = () => {
  return (
    formData.bagian_pengusul &&
    formData.program &&
    formData.kuantitas > 0 &&
    formData.total_anggaran > 0 &&
    formData.uraian_barang?.trim().length >= 20 &&
    dokumenPendukung !== null &&
    Object.keys(errors).length === 0
  );
};

<button
  type="submit"
  disabled={!isFormValid() || isSubmitting}
  className={`
    btn-primary w-full
    ${!isFormValid() || isSubmitting ? 'opacity-50 cursor-not-allowed' : ''}
  `}
>
  {isSubmitting ? (
    <><Loader2 className="w-4 h-4 animate-spin inline mr-2" /> Menyimpan...</>
  ) : (
    '✅ Submit Pengajuan'
  )}
</button>
6. EASY REVERSAL (Kemudahan Membatalkan Aksi)
Undo Toast:
jsxconst handleDelete = (id) => {
  const deletedItem = pengajuanList.find(p => p.id === id);
  
  // Soft delete - simpan di state
  setDeletedItems([...deletedItems, deletedItem]);
  setPengajuanList(pengajuanList.filter(p => p.id !== id));
  
  // Show undo toast
  const toastId = toast('Pengajuan dihapus', {
    description: `Pengajuan #${id} telah dihapus`,
    action: {
      label: 'Undo',
      onClick: () => {
        // Restore item
        setPengajuanList([...pengajuanList, deletedItem].sort((a,b) => b.id - a.id));
        setDeletedItems(deletedItems.filter(item => item.id !== id));
        toast.success('Pengajuan dipulihkan');
        toast.dismiss(toastId);
      }
    },
    duration: 5000, // 5 seconds to undo
  });
  
  // Permanent delete after timeout
  setTimeout(() => {
    if (deletedItems.find(item => item.id === id)) {
      // Actually delete from database
      permanentDelete(id);
      setDeletedItems(deletedItems.filter(item => item.id !== id));
    }
  }, 5000);
};
Cancel/Back Buttons:
jsx// Always provide clear cancel option
<div className="flex gap-3 mt-6">
  <button
    onClick={handleCancel}
    className="flex-1 btn-secondary"
  >
    ← Batal
  </button>
  <button
    onClick={handleSave}
    className="flex-1 btn-primary"
  >
    Simpan →
  </button>
</div>
Draft Auto-Save:
jsx// Auto-save draft every 30 seconds
useEffect(() => {
  if (!isDirty) return;
  
  const autoSaveInterval = setInterval(() => {
    saveDraft(formData);
    toast.success('Draft tersimpan otomatis', { duration: 2000 });
  }, 30000); // 30 seconds
  
  return () => clearInterval(autoSaveInterval);
}, [formData, isDirty]);

// Load draft on mount
useEffect(() => {
  const savedDraft = loadDraft();
  if (savedDraft && confirm('Ditemukan draft yang belum selesai. Lanjutkan?')) {
    setFormData(savedDraft);
  }
}, []);
Activity Log dengan Rollback:
jsxconst ActivityLog = ({ pengajuanId }) => {
  const [activities, setActivities] = useState([]);
  
  return (
    <div className="space-y-3">
      {activities.map(activity => (
        <div key={activity.id} className="flex items-start gap-3 p-3 bg-gray-50 rounded">
          <div className="flex-1">
            <div className="text-sm font-medium">{activity.action}</div>
            <div className="text-xs text-gray-500">
              {activity.user} • {formatDate(activity.timestamp)}
            </div>
          </div>
          
          {activity.canRevert && (
            <button
              onClick={() => revertActivity(activity.id)}
              className="text-xs text-blue-600 hover:text-blue-800"
            >
              Batalkan
            </button>
          )}
        </div>
      ))}
    </div>
  );
};
7. USER CONTROL (Kontrol Pengguna)
Customizable Table:
jsxconst [visibleColumns, setVisibleColumns] = useState([
  'id', 'bagian', 'tanggal_pengajuan', 'status', 'total_anggaran'
]);

const ColumnSelector = () => {
  const allColumns = [
    { key: 'id', label: 'No. Pengajuan', locked: true },
    { key: 'bagian', label: 'Bagian Pengusul' },
    { key: 'program', label: 'Program' },
    { key: 'kegiatan', label: 'Kegiatan' },
    { key: 'tanggal_pengajuan', label: 'Tanggal Ajukan' },
    { key: 'status', label: 'Status' },
    { key: 'kuantitas', label: 'Kuantitas' },
    { key: 'total_anggaran', label: 'Total Anggaran' },
    { key: 'skema', label: 'Skema' },
    { key: 'atr_nonatr', label: 'Jenis (ATR/Non-ATR)' },
  ];
  
  return (
    <div className="relative">
      <button className="btn-secondary flex items-center gap-2">
        <Columns className="w-4 h-4" />
        Kolom
      </button>
      
      <div className="absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-lg border p-3 z-10">
        <div className="text-sm font-medium mb-2">Pilih Kolom</div>
        
        {allColumns.map(col => (
          <label key={col.key} className="flex items-center gap-2 py-1 hover:bg-gray-50 cursor-pointer">
            <input
              type="checkbox"
              checked={visibleColumns.includes(col.key)}
              disabled={col.locked}
              onChange={(e) => {
                if (e.target.checked) {
                  setVisibleColumns([...visibleColumns, col.key]);
                } else {
                  setVisibleColumns(visibleColumns.filter(k => k !== col.key));
                }
              }}
              className="rounded"
            />
            <span className="text-sm">{col.label}</span>
            {col.locked && <Lock className="w-3 h-3 text-gray-400 ml-auto" />}
          </label>
        ))}
        
        <div className="border-t mt-2 pt-2 flex gap-2">
          <button 
            onClick={() => setVisibleColumns(allColumns.map(c => c.key))}
            className="text-xs text-blue-600 hover:text-blue-800"
          >
            Pilih Semua
          </button>
          <button 
            onClick={() => setVisibleColumns(['id', 'bagian', 'status', 'total_anggaran'])}
            className="text-xs text-blue-600 hover:text-blue-800"
          >
            Reset Default
          </button>
        </div>
      </div>
    </div>
  );
};
Saved Views/Presets:
jsxconst [savedViews, setSavedViews] = useState([
  { id: 1, name: 'View Default', filters: {...}, columns: [...] },
  { id: 2, name: 'Tertunda Saya', filters: {...}, columns: [...] },
]);

const [currentView, setCurrentView] = useState(null);

const SaveViewDialog = () => {
  const [viewName, setViewName] = useState('');
  
  const handleSave = () => {
    const newView = {
      id: Date.now(),
      name: viewName,
      filters: activeFilters,
      columns: visibleColumns,
      sortBy: sortConfig,
    };
    
    setSavedViews([...savedViews, newView]);
    toast.success(`View "${viewName}" tersimpan`);
  };
  
  return (
    <div className="p-4">
      <input
        type="text"
        value={viewName}
        onChange={(e) => setViewName(e.target.value)}
        placeholder="Nama view..."
        className="w-full px-3 py-2 border rounded"
      />
      <button onClick={handleSave} className="btn-primary w-full mt-2">
        💾 Simpan View
      </button>
    </div>
  );
};

// Load saved view
const loadView = (view) => {
  setActiveFilters(view.filters);
  setVisibleColumns(view.columns);
  setSortConfig(view.sortBy);
  setCurrentView(view);
  toast.success(`View "${view.name}" dimuat`);
};
Filter Persistence:
jsx// Save filters to state (not localStorage!)
const [filterPreferences, setFilterPreferences] = useState(() => {
  // Could load from window.storage API if needed
  return {
    defaultPeriod: 'last6months',
    defaultStatus: ['all'],
    rowsPerPage: 25,
  };
});

// Apply user preferences on mount
useEffect(() => {
  applyFilters(filterPreferences);
}, []);
Clear All Controls:
jsxconst handleClearAllFilters = () => {
  setPeriodFilter(null);
  setBagianFilter([]);
  setStatusFilter([]);
  setJenisFilter('all');
  setSkemaFilter('all');
  setSearchQuery('');
  
  toast.info('Semua filter dihapus');
};

<button 
  onClick={handleClearAllFilters}
  className="text-sm text-red-600 hover:text-red-800 flex items-center gap-1"
>
  <XCircle className="w-4 h-4" />
  Clear All Filters
</button>
8. REDUCE MEMORY LOAD (Kurangi Beban Memori)
Contextual Tooltips:
jsx// Hover tooltips for all icons and abbreviations
<Tooltip content="Total pengajuan dalam periode filter aktif">
  <div className="flex items-center gap-2">
    <FileText className="w-5 h-5 text-blue-500" />
    <span>Total Pengajuan</span>
  </div>
</Tooltip>

// Complex metrics explanation
<Tooltip 
  content={
    <div className="text-xs space-y-1">
      <div className="font-medium">Rata-rata Waktu Penyelesaian</div>
      <div>Dihitung dari tanggal pengajuan hingga tanggal final</div>
      <div>Hanya untuk pengajuan yang sudah selesai</div>
      <div className="text-gray-400 mt-1">Target SLA: 7 hari</div>
    </div>
  }
>
  <Info className="w-4 h-4 text-gray-400 cursor-help" />
</Tooltip>
Inline Help Text:
jsx<div className="space-y-2">
  <label className="block text-sm font-medium text-gray-700">
    Akun Belanja *
  </label>
  <select className="w-full px-4 py-2 border rounded-lg">
    <option value="">Pilih akun belanja...</option>
    <option value="5201">5.2.01 - Belanja Pegawai</option>
    <option value="5202">5.2.02 - Belanja Barang</option>
  </select>
  <div className="flex items-start gap-2 text-xs text-gray-500">
    <Info className="w-4 h-4 flex-shrink-0 mt-0.5" />
    <span>
      Pilih akun belanja sesuai dengan jenis pengadaan. 
      Jika ragu, hubungi bagian keuangan.
    </span>
  </div>
</div>
Visual Indicators:
jsx// Status with icon + color + text
const StatusBadge = ({ status }) => {
  const config = STATUS_CONFIG[status];
  const Icon = lucideIcons[config.icon];
  
  return (
    <div className={`inline-flex items-center gap-1.5 px-3 py-1 rounded-full text-sm font-medium border ${config.color}`}>
      <Icon className="w-4 h-4" />
      <span>{config.label}</span>
    </div>
  );
};

// Umur pengajuan with color coding
const UmurBadge = ({ days }) => {
  const getColor = () => {
    if (days < 7) return 'text-green-600 bg-green-50';
    if (days < 14) return 'text-yellow-600 bg-yellow-50';
    if (days < 30) return 'text-orange-600 bg-orange-50';
    return 'text-red-600 bg-red-50';
  };
  
  return (
    <span className={`px-2 py-1 rounded text-xs font-medium ${getColor()}`}>
      {days} hari
    </span>
  );
};
Breadcrumbs for Navigation:
jsxconst Breadcrumbs = ({ items }) => (
  <nav className="flex items-center gap-2 text-sm text-gray-600 mb-4">
    {items.map((item, idx) => (
      <React.Fragment key={idx}>
        {idx > 0 && <ChevronRight className="w-4 h-4" />}
        {item.href ? (
          <a href={item.href} className="hover:text-blue-600">
            {item.label}
          </a>
        ) : (
          <span className="font-medium text-gray-900">{item.label}</span>
        )}
      </React.Fragment>
    ))}
  </nav>
);

// Usage
<Breadcrumbs items={[
  { label: 'Dashboard', href: '/dashboard' },
  { label: 'RKBMN', href: '/rkbmn' },
  { label: 'Detail Pengajuan #123' },
]} />
Recently Used Values:
jsx// In form, show recent selections
const [recentBagian, setRecentBagian] = useState([]);

const handleBagianSelect = (bagian) => {
  setFormData({...formData, bagian});
  
  // Add to recent, keep last 5
  const updated = [bagian, ...recentBagian.filter(b => b !== bagian)].slice(0, 5);
  setRecentBagian(updated);
};

// Show in dropdown
<select>
  {recentBagian.length > 0 && (
    <>
      <optgroup label="Baru-baru ini">
        {recentBagian.map(b => (
          <option key={b} value={b}>⭐ {b}</option>
        ))}
      </optgroup>
      <optgroup label="Semua">
    </>
  )}
  {allBagian.map(b => (
    <option key={b} value={b}>{b}</option>
  ))}
  {recentBagian.length > 0 && </optgroup>}
</select>

📐 RESPONSIVE DESIGN
Desktop (1280px+)
jsx<div className="grid grid-cols-6 gap-4">
  {/* KPI Cards - 6 columns */}
  {kpis.map(kpi => (
    <div key={kpi.id} className="col-span-1">
      <KPICard data={kpi} />
    </div>
  ))}
</div>

<div className="grid grid-cols-5 gap-6">
  {/* Trend Chart - 3 cols (60%) */}
  <div className="col-span-3">
    <TrendChart />
  </div>
  
  {/* Status + Top 10 - 2 cols (40%) */}
  <div className="col-span-2 space-y-6">
    <StatusDonut />
    <Top10Bagian />
  </div>
</div>
Tablet (768px - 1279px)
jsx<div className="grid grid-cols-3 gap-4">
  {/* KPI Cards - 3 columns, 2 rows */}
  {kpis.map(kpi => (
    <div key={kpi.id} className="col-span-1">
      <KPICard data={kpi} />
    </div>
  ))}
</div>

<div className="grid grid-cols-2 gap-6">
  {/* All charts 50-50 */}
  <div className="col-span-1"><TrendChart /></div>
  <div className="col-span-1"><StatusDonut /></div>
  <div className="col-span-1"><PipelineFlow /></div>
  <div className="col-span-1"><TimeHistogram /></div>
</div>
Mobile (<768px)
jsx<div className="space-y-4">
  {/* KPI Cards - Single column, scrollable */}
  <div className="flex gap-4 overflow-x-auto snap-x snap-mandatory pb-4">
    {kpis.map(kpi => (
      <div key={kpi.id} className="min-w-[280px] snap-start">
        <KPICard data={kpi} />
      </div>
    ))}
  </div>
  
  {/* Charts - Stack vertically */}
  <div className="space-y-6">
    <TrendChart />
    <StatusDonut />
    <PipelineFlow />
    <TimeHistogram />
  </div>
  
  {/* Table - Simplified card view */}
  <div className="space-y-3">
    {pengajuanList.map(item => (
      <PengajuanCard key={item.id} data={item} />
    ))}
  </div>
</div>

🎨 STYLING & THEME
Color Palette
javascriptconst COLORS = {
  // Primary
  primary: {
    50: '#eff6ff',
    100: '#dbeafe',
    500: '#3b82f6',
    600: '#2563eb',
    700: '#1d4ed8',
  },
  
  // Success
  success: {
    50: '#f0fdf4',
    100: '#dcfce7',
    500: '#10b981',
    600: '#059669',
  },
  
  // Warning
  warning: {
    50: '#fffbeb',
    100: '#fef3c7',
    500: '#fbbf24',
    600: '#d97706',
  },
  
  // Danger
  danger: {
    50: '#fef2f2',
    100: '#fee2e2',
    500: '#ef4444',
    600: '#dc2626',
  },
  
  // Neutral
  gray: {
    50: '#f9fafb',
    100: '#f3f4f6',
    200: '#e5e7eb',
    300: '#d1d5db',
    500: '#6b7280',
    700: '#374151',
    900: '#111827',
  },
};
Typography Scale
css.text-display { font-size: 3.75rem; font-weight: 800; } /* 60px */
.text-h1 { font-size: 2.25rem; font-weight: 700; } /* 36px */
.text-h2 { font-size: 1.875rem; font-weight: 600; } /* 30px */
.text-h3 { font-size: 1.5rem; font-weight: 600; } /* 24px */
.text-h4 { font-size: 1.25rem; font-weight: 600; } /* 20px */
.text-body { font-size: 1rem; font-weight: 400; } /* 16px */
.text-small { font-size: 0.875rem; font-weight: 400; } /* 14px */
.text-caption { font-size: 0.75rem; font-weight: 400; } /* 12px */

⚡ PERFORMANCE OPTIMIZATIONS
Lazy Loading & Pagination
jsx// Virtual scrolling for large tables
import { useVirtualizer } from '@tanstack/react-virtual';

const VirtualTable = ({ data }) => {
  const parentRef = useRef();
  
  const rowVirtualizer = useVirtualizer({
    count: data.length,
    getScrollElement: () => parentRef.current,
    estimateSize: () => 50,
    overscan: 10,
  });
  
  return (
    <div ref={parentRef} className="h-[600px] overflow-auto">
      <div style={{ height: `${rowVirtualizer.getTotalSize()}px` }}>
        {rowVirtualizer.getVirtualItems().map(virtualRow => (
          <div
            key={virtualRow.index}
            style={{
              position: 'absolute',
              top: 0,
              left: 0,
              width: '100%',
              height: `${virtualRow.size}px`,
              transform: `translateY(${virtualRow.start}px)`,
            }}
          >
            <TableRow data={data[virtualRow.index]} />
          </div>
        ))}
      </div>
    </div>
  );
};
Debounced Search
jsxconst [searchQuery, setSearchQuery] = useState('');
const [debouncedQuery, setDebouncedQuery] = useState('');

useEffect(() => {
  const timer = setTimeout(() => {
    setDebouncedQuery(searchQuery);
  }, 300);
  
  return () => clearTimeout(timer);
}, [searchQuery]);

// Use debouncedQuery for filtering
const filteredData = useMemo(() => {
  return data.filter(item => 
    item.program.toLowerCase().includes(debouncedQuery.toLowerCase()) ||
    item.bagian.toLowerCase().includes(debouncedQuery.toLowerCase())
  );
}, [data, debouncedQuery]);
Memoization
jsx// Memoize expensive calculations
const totalAnggaran = useMemo(() => {
  return filteredData.reduce((sum, item) => sum + item.total_anggaran, 0);
}, [filteredData]);

const avgWaktu = useMemo(() => {
  const selesai = filteredData.filter(item => item.tanggal_final);
  if (selesai.length === 0) return 0;
  
  const total = selesai.reduce((sum, item) => {
    const days = daysBetween(item.tanggal_pengajuan, item.tanggal_final);
    return sum + days;
  }, 0);
  
  return total / selesai.length;
}, [filteredData]);

// Memoize chart data transformation
const chartData = useMemo(() => {
  return transformDataForChart(filteredData);
}, [filteredData]);

🔧 UTILITY FUNCTIONS
javascript// Date formatting
const formatDate = (dateString) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('id-ID', {
    day: '2-digit',
    month: 'short',
    year: 'numeric'
  });
};

const formatDateTime = (dateString) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('id-ID', {
    day: '2-digit',
    month: 'short',
    year: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  }) + ' WIB';
};

const daysBetween = (startDate, endDate) => {
  const start = new Date(startDate);
  const end = new Date(endDate);
  const diffTime = Math.abs(end - start);
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  return diffDays;
};

// Currency formatting
const formatCurrency = (amount) => {
  if (amount >= 1000000000) {
    return 'Rp ' + (amount / 1000000000).toFixed(1) + ' M';
  } else if (amount >= 1000000) {RetryClaude does not have the ability to run the code it generates yet.OContinuereturn 'Rp ' + (amount / 1000000).toFixed(1) + ' Jt';
} else if (amount >= 1000) {
return 'Rp ' + (amount / 1000).toFixed(0) + ' Rb';
}
return 'Rp ' + new Intl.NumberFormat('id-ID').format(amount);
};
const formatCurrencyFull = (amount) => {
return 'Rp ' + new Intl.NumberFormat('id-ID').format(amount);
};
// Number formatting
const formatNumber = (num) => {
return new Intl.NumberFormat('id-ID').format(num);
};
// Percentage formatting
const formatPercentage = (value, total) => {
if (total === 0) return '0%';
return ((value / total) * 100).toFixed(1) + '%';
};
// Status helpers
const getStatusConfig = (status) => {
return STATUS_CONFIG[status] || STATUS_CONFIG['draft'];
};
const isOverdue = (tanggalPengajuan, status) => {
if (['selesai', 'ditolak'].includes(status)) return false;
const days = daysBetween(tanggalPengajuan, new Date());
return days > 14;
};
const isCritical = (tanggalPengajuan, status) => {
if (['selesai', 'ditolak'].includes(status)) return false;
const days = daysBetween(tanggalPengajuan, new Date());
return days > 30;
};
// Calculate age in days
const calculateAge = (tanggalPengajuan) => {
return daysBetween(tanggalPengajuan, new Date());
};
// Data aggregation
const groupBy = (array, key) => {
return array.reduce((result, item) => {
const group = item[key];
if (!result[group]) {
result[group] = [];
}
result[group].push(item);
return result;
}, {});
};
// Filter helpers
const applyFilters = (data, filters) => {
return data.filter(item => {
// Period filter
if (filters.startDate && filters.endDate) {
const itemDate = new Date(item.tanggal_pengajuan);
if (itemDate < new Date(filters.startDate) || itemDate > new Date(filters.endDate)) {
return false;
}
}
// Bagian filter
if (filters.bagian.length > 0 && !filters.bagian.includes(item.id_bagian_pengusul)) {
  return false;
}

// Status filter
if (filters.status.length > 0 && !filters.status.includes(item.status)) {
  return false;
}

// Search query
if (filters.searchQuery) {
  const query = filters.searchQuery.toLowerCase();
  const searchableFields = [
    item.program,
    item.kegiatan,
    item.nama_bagian_pengusul,
    item.uraian_barang,
    item.id?.toString(),
  ].filter(Boolean);
  
  if (!searchableFields.some(field => field.toLowerCase().includes(query))) {
    return false;
  }
}

return true;
});
};
// Sort helpers
const sortData = (data, sortConfig) => {
if (!sortConfig.key) return data;
return [...data].sort((a, b) => {
let aVal = a[sortConfig.key];
let bVal = b[sortConfig.key];
// Handle null/undefined
if (aVal == null) return 1;
if (bVal == null) return -1;

// Numeric comparison
if (typeof aVal === 'number' && typeof bVal === 'number') {
  return sortConfig.direction === 'asc' ? aVal - bVal : bVal - aVal;
}

// Date comparison
if (sortConfig.key.includes('tanggal')) {
  aVal = new Date(aVal).getTime();
  bVal = new Date(bVal).getTime();
  return sortConfig.direction === 'asc' ? aVal - bVal : bVal - aVal;
}

// String comparison
aVal = String(aVal).toLowerCase();
bVal = String(bVal).toLowerCase();

if (sortConfig.direction === 'asc') {
  return aVal < bVal ? -1 : aVal > bVal ? 1 : 0;
} else {
  return aVal > bVal ? -1 : aVal < bVal ? 1 : 0;
}
});
};
// Export helpers
const exportToCSV = (data, filename) => {
const headers = Object.keys(data[0]);
const csvContent = [
headers.join(','),
...data.map(row =>
headers.map(header => {
let cell = row[header];
if (typeof cell === 'string' && cell.includes(',')) {
cell = "${cell}";
}
return cell;
}).join(',')
)
].join('\n');
const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
const link = document.createElement('a');
link.href = URL.createObjectURL(blob);
link.download = filename;
link.click();
};
// Generate sample data
const generateSampleData = () => {
const bagianList = [
'Bagian IT', 'Bagian Keuangan', 'Bagian SDM', 'Bagian Umum',
'Bagian Logistik', 'Bagian Hukum', 'Bagian Perencanaan',
'Bagian Kepegawaian', 'Bagian Protokol', 'Bagian Arsip'
];
const programList = [
'Peningkatan Sarana & Prasarana',
'Pengembangan Sistem Informasi',
'Peningkatan Kapasitas SDM',
'Pemeliharaan Gedung & Fasilitas',
'Modernisasi Perkantoran'
];
const kegiatanList = [
'Pengadaan Perangkat Komputer',
'Pengadaan Furniture Kantor',
'Pengadaan Kendaraan Dinas',
'Pengadaan AC & Elektronik',
'Pengadaan Software & Lisensi'
];
const statusList = [
{ status: 'draft', weight: 0.05 },
{ status: 'pengajuan', weight: 0.10 },
{ status: 'verifikasi_kbmn', weight: 0.15 },
{ status: 'verifikasi_perencanaan', weight: 0.10 },
{ status: 'disetujui', weight: 0.20 },
{ status: 'selesai', weight: 0.35 },
{ status: 'ditolak', weight: 0.05 }
];
const skemaList = ['E-Purchasing', 'Tender', 'Penunjukan Langsung', 'Swakelola'];
const atrList = ['ATR', 'Non-ATR'];
const itemList = [
{ nama: 'Laptop HP Core i5 RAM 8GB SSD 256GB', harga: 8500000 },
{ nama: 'PC Desktop Dell Core i7 RAM 16GB', harga: 12000000 },
{ nama: 'Printer HP LaserJet Pro', harga: 3500000 },
{ nama: 'AC 1.5 PK Daikin', harga: 4200000 },
{ nama: 'Meja Kerja Kayu Jati 120x60cm', harga: 2500000 },
{ nama: 'Kursi Kantor Ergonomis', harga: 1800000 },
{ nama: 'Lemari Arsip Besi 4 Pintu', harga: 3200000 },
{ nama: 'Proyektor Epson EB-X05', harga: 5500000 },
{ nama: 'Whiteboard Magnetic 120x240cm', harga: 850000 },
{ nama: 'Server Dell PowerEdge', harga: 35000000 },
];
const data = [];
const today = new Date();
// Generate weighted status distribution
const getRandomStatus = () => {
const random = Math.random();
let cumulative = 0;
for (const { status, weight } of statusList) {
cumulative += weight;
if (random <= cumulative) return status;
}
return 'draft';
};
for (let i = 1; i <= 30; i++) {
const status = getRandomStatus();
const bagian = bagianList[Math.floor(Math.random() * bagianList.length)];
const item = itemList[Math.floor(Math.random() * itemList.length)];
const kuantitas = Math.floor(Math.random() * 10) + 1;
// Generate dates based on status
const daysAgo = Math.floor(Math.random() * 180); // 0-180 days ago
const tanggalPengajuan = new Date(today);
tanggalPengajuan.setDate(today.getDate() - daysAgo);

let tanggalKbmn = null;
let tanggalPerencanaan = null;
let tanggalFinal = null;

if (['verifikasi_kbmn', 'verifikasi_perencanaan', 'disetujui', 'selesai'].includes(status)) {
  tanggalKbmn = new Date(tanggalPengajuan);
  tanggalKbmn.setDate(tanggalKbmn.getDate() + Math.floor(Math.random() * 5) + 2);
}

if (['verifikasi_perencanaan', 'disetujui', 'selesai'].includes(status)) {
  tanggalPerencanaan = new Date(tanggalKbmn);
  tanggalPerencanaan.setDate(tanggalPerencanaan.getDate() + Math.floor(Math.random() * 5) + 2);
}

if (['selesai'].includes(status)) {
  tanggalFinal = new Date(tanggalPerencanaan);
  tanggalFinal.setDate(tanggalFinal.getDate() + Math.floor(Math.random() * 5) + 2);
}

data.push({
  id: i,
  kode_jenis_pengajuan: `RKBMN-2024-${String(i).padStart(4, '0')}`,
  id_bagian_pengusul: Math.floor(Math.random() * 10) + 1,
  nama_bagian_pengusul: bagian,
  id_biro_pengusul: Math.floor(Math.random() * 5) + 1,
  nama_biro_pengusul: 'Biro Umum',
  id_bagian_pelaksana: Math.floor(Math.random() * 10) + 1,
  nama_bagian_pelaksana: bagian,
  id_biro_pelaksana: Math.floor(Math.random() * 5) + 1,
  nama_biro_pelaksana: 'Biro Umum',
  program: programList[Math.floor(Math.random() * programList.length)],
  kegiatan: kegiatanList[Math.floor(Math.random() * kegiatanList.length)],
  output: `${kuantitas} Unit ${item.nama}`,
  kode_barang: `3.02.01.0${Math.floor(Math.random() * 9) + 1}.${String(Math.floor(Math.random() * 999) + 1).padStart(3, '0')}`,
  status: status,
  tahun_anggaran: 2024,
  tanggal_pengajuan: tanggalPengajuan.toISOString().split('T')[0],
  tanggal_kebmn: tanggalKbmn?.toISOString().split('T')[0] || null,
  tanggal_keperencanaan: tanggalPerencanaan?.toISOString().split('T')[0] || null,
  tanggal_final: tanggalFinal?.toISOString().split('T')[0] || null,
  tujuan_rencana: `Pengadaan ${item.nama} untuk meningkatkan produktivitas ${bagian}`,
  atr_nonatr: atrList[Math.random() > 0.4 ? 0 : 1],
  skema: skemaList[Math.floor(Math.random() * skemaList.length)],
  harga_barang: item.harga,
  total_anggaran: item.harga * kuantitas,
  uraian_barang: `${item.nama} dengan spesifikasi sesuai standar industri, garansi resmi 1 tahun, include instalasi dan training.`,
  keterangan: `Pengajuan untuk kebutuhan operasional ${bagian}`,
  dokumen_pendukung: 'justifikasi_pengadaan.pdf',
  alasan_pengusul_bmn: status === 'ditolak' ? 'Anggaran tidak mencukupi di tahun ini' : '',
  alasan_koordinator_bmn: '',
  alasan_perencanaan: '',
  created_at: tanggalPengajuan.toISOString(),
  updated_at: new Date().toISOString(),
  akun_belanja: '5.2.02.01',
  akun_neraca: '1.3.01.01',
  kuantitas: kuantitas,
  tor_signed_path: tanggalKbmn ? 'tor_signed.pdf' : null,
  tanggal_verifikasi_tor: tanggalKbmn?.toISOString() || null,
  lampiran_signed_path: tanggalKbmn ? 'lampiran.pdf' : null,
  tanggal_verifikasi_lampiran: tanggalKbmn?.toISOString() || null,
});
}
return data.sort((a, b) => new Date(b.tanggal_pengajuan) - new Date(a.tanggal_pengajuan));
};

---

## 🚀 MAIN COMPONENT STRUCTURE
```typescript
// Main Dashboard Component
const DashboardRKBMN = () => {
  // ============= STATE MANAGEMENT =============
  const [pengajuanData, setPengajuanData] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [lastUpdate, setLastUpdate] = useState(new Date());
  
  // Filters
  const [periodFilter, setPeriodFilter] = useState({ start: null, end: null });
  const [bagianFilter, setBagianFilter] = useState([]);
  const [statusFilter, setStatusFilter] = useState([]);
  const [jenisFilter, setJenisFilter] = useState('all');
  const [skemaFilter, setSkemaFilter] = useState('all');
  const [searchQuery, setSearchQuery] = useState('');
  
  // Table state
  const [sortConfig, setSortConfig] = useState({ key: 'tanggal_pengajuan', direction: 'desc' });
  const [currentPage, setCurrentPage] = useState(1);
  const [rowsPerPage, setRowsPerPage] = useState(25);
  const [visibleColumns, setVisibleColumns] = useState([
    'id', 'nama_bagian_pengusul', 'program', 'tanggal_pengajuan', 
    'status', 'kuantitas', 'total_anggaran', 'actions'
  ]);
  const [selectedRows, setSelectedRows] = useState([]);
  
  // Modal state
  const [detailModal, setDetailModal] = useState({ open: false, data: null });
  const [formModal, setFormModal] = useState({ open: false, mode: 'create', data: null });
  const [deleteDialog, setDeleteDialog] = useState({ open: false, data: null });
  const [rejectDialog, setRejectDialog] = useState({ open: false, data: null });
  
  // Chart preferences
  const [trendView, setTrendView] = useState('monthly'); // 'weekly' | 'monthly'
  const [top10Metric, setTop10Metric] = useState('count'); // 'count' | 'budget'
  
  // ============= DATA LOADING =============
  useEffect(() => {
    loadData();
  }, []);
  
  const loadData = async () => {
    setIsLoading(true);
    try {
      // Simulate API call
      await new Promise(resolve => setTimeout(resolve, 500));
      const data = generateSampleData();
      setPengajuanData(data);
      setLastUpdate(new Date());
    } catch (error) {
      console.error('Error loading data:', error);
      toast.error('Gagal memuat data');
    } finally {
      setIsLoading(false);
    }
  };
  
  const refreshData = () => {
    toast.info('Memperbarui data...');
    loadData();
  };
  
  // ============= COMPUTED DATA =============
  const filteredData = useMemo(() => {
    return applyFilters(pengajuanData, {
      startDate: periodFilter.start,
      endDate: periodFilter.end,
      bagian: bagianFilter,
      status: statusFilter,
      searchQuery,
    });
  }, [pengajuanData, periodFilter, bagianFilter, statusFilter, searchQuery]);
  
  const sortedData = useMemo(() => {
    return sortData(filteredData, sortConfig);
  }, [filteredData, sortConfig]);
  
  const paginatedData = useMemo(() => {
    const startIndex = (currentPage - 1) * rowsPerPage;
    return sortedData.slice(startIndex, startIndex + rowsPerPage);
  }, [sortedData, currentPage, rowsPerPage]);
  
  // KPI Calculations
  const kpiData = useMemo(() => {
    const total = filteredData.length;
    const last30Days = filteredData.filter(item => {
      const days = daysBetween(item.tanggal_pengajuan, new Date());
      return days <= 30;
    }).length;
    
    const approved = filteredData.filter(item => 
      ['disetujui', 'selesai'].includes(item.status)
    ).length;
    
    const overdue = filteredData.filter(item => isOverdue(item.tanggal_pengajuan, item.status)).length;
    
    const completed = filteredData.filter(item => item.tanggal_final);
    const avgTime = completed.length > 0
      ? completed.reduce((sum, item) => {
          return sum + daysBetween(item.tanggal_pengajuan, item.tanggal_final);
        }, 0) / completed.length
      : 0;
    
    const totalBudget = filteredData.reduce((sum, item) => sum + item.total_anggaran, 0);
    
    return {
      total,
      last30Days,
      approved,
      overdue,
      avgTime,
      totalBudget,
    };
  }, [filteredData]);
  
  // Chart Data
  const trendChartData = useMemo(() => {
    // Group by month or week based on trendView
    const grouped = groupBy(filteredData, item => {
      const date = new Date(item.tanggal_pengajuan);
      if (trendView === 'monthly') {
        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;
      } else {
        // Weekly grouping logic
        const weekNum = Math.ceil(date.getDate() / 7);
        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-W${weekNum}`;
      }
    });
    
    return Object.entries(grouped).map(([period, items]) => ({
      period,
      count: items.length,
      budget: items.reduce((sum, item) => sum + item.total_anggaran, 0),
    })).sort((a, b) => a.period.localeCompare(b.period));
  }, [filteredData, trendView]);
  
  const statusDistribution = useMemo(() => {
    const grouped = groupBy(filteredData, 'status');
    return Object.entries(grouped).map(([status, items]) => ({
      status,
      count: items.length,
      budget: items.reduce((sum, item) => sum + item.total_anggaran, 0),
      percentage: (items.length / filteredData.length) * 100,
    }));
  }, [filteredData]);
  
  const top10Bagian = useMemo(() => {
    const grouped = groupBy(filteredData, 'nama_bagian_pengusul');
    const result = Object.entries(grouped).map(([bagian, items]) => ({
      bagian,
      count: items.length,
      budget: items.reduce((sum, item) => sum + item.total_anggaran, 0),
    }));
    
    result.sort((a, b) => {
      return top10Metric === 'count' 
        ? b.count - a.count 
        : b.budget - a.budget;
    });
    
    return result.slice(0, 10);
  }, [filteredData, top10Metric]);
  
  // ============= HANDLERS =============
  const handleSort = (key) => {
    setSortConfig(prev => ({
      key,
      direction: prev.key === key && prev.direction === 'asc' ? 'desc' : 'asc',
    }));
  };
  
  const handleExport = (format) => {
    if (format === 'csv') {
      exportToCSV(filteredData, `rkbmn_export_${Date.now()}.csv`);
      toast.success('Data berhasil di-export ke CSV');
    } else if (format === 'excel') {
      toast.info('Export Excel akan tersedia segera');
    } else if (format === 'pdf') {
      toast.info('Export PDF akan tersedia segera');
    }
  };
  
  const handleDelete = async (id) => {
    const item = pengajuanData.find(p => p.id === id);
    setDeleteDialog({ open: true, data: item });
  };
  
  const confirmDelete = async () => {
    const id = deleteDialog.data.id;
    
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 300));
    
    setPengajuanData(prev => prev.filter(p => p.id !== id));
    setDeleteDialog({ open: false, data: null });
    
    toast.success('Pengajuan berhasil dihapus', {
      action: {
        label: 'Undo',
        onClick: () => {
          setPengajuanData(prev => [...prev, deleteDialog.data].sort((a,b) => b.id - a.id));
          toast.success('Pengajuan dipulihkan');
        }
      },
      duration: 5000,
    });
  };
  
  const handleApprove = async (id) => {
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 300));
    
    setPengajuanData(prev => prev.map(p => 
      p.id === id ? { ...p, status: 'disetujui', tanggal_final: new Date().toISOString().split('T')[0] } : p
    ));
    
    toast.success(`Pengajuan #${id} berhasil disetujui`);
  };
  
  const handleReject = async (id, alasan) => {
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 300));
    
    setPengajuanData(prev => prev.map(p => 
      p.id === id ? { ...p, status: 'ditolak', alasan_koordinator_bmn: alasan } : p
    ));
    
    setRejectDialog({ open: false, data: null });
    toast.success(`Pengajuan #${id} ditolak`);
  };
  
  // ============= RENDER =============
  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <Header 
        onRefresh={refreshData}
        onExport={handleExport}
        onNewPengajuan={() => setFormModal({ open: true, mode: 'create', data: null })}
        lastUpdate={lastUpdate}
        isLoading={isLoading}
      />
      
      {/* Filters */}
      <FilterPanel
        periodFilter={periodFilter}
        setPeriodFilter={setPeriodFilter}
        bagianFilter={bagianFilter}
        setBagianFilter={setBagianFilter}
        statusFilter={statusFilter}
        setStatusFilter={setStatusFilter}
        jenisFilter={jenisFilter}
        setJenisFilter={setJenisFilter}
        skemaFilter={skemaFilter}
        setSkemaFilter={setSkemaFilter}
        bagianList={Array.from(new Set(pengajuanData.map(p => p.nama_bagian_pengusul)))}
      />
      
      {/* Main Content */}
      <div className="max-w-[1920px] mx-auto px-4 sm:px-6 lg:px-8 py-6 space-y-6">
        
        {/* KPI Cards */}
        <KPISection data={kpiData} isLoading={isLoading} />
        
        {/* Charts Row 1 */}
        <div className="grid grid-cols-1 lg:grid-cols-5 gap-6">
          <div className="lg:col-span-3">
            <TrendChart 
              data={trendChartData}
              view={trendView}
              setView={setTrendView}
              isLoading={isLoading}
            />
          </div>
          
          <div className="lg:col-span-2 space-y-6">
            <StatusDonutChart 
              data={statusDistribution}
              isLoading={isLoading}
            />
            
            <Top10BagianChart 
              data={top10Bagian}
              metric={top10Metric}
              setMetric={setTop10Metric}
              isLoading={isLoading}
            />
          </div>
        </div>
        
        {/* Charts Row 2 */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <ApprovalPipelineChart 
            data={filteredData}
            isLoading={isLoading}
          />
          
          <TimeToResolveHistogram 
            data={filteredData}
            isLoading={isLoading}
          />
        </div>
        
        {/* Alerts Panel */}
        <AlertsPanel data={filteredData} />
        
        {/* Data Table */}
        <DataTable
          data={paginatedData}
          total={sortedData.length}
          sortConfig={sortConfig}
          onSort={handleSort}
          visibleColumns={visibleColumns}
          setVisibleColumns={setVisibleColumns}
          selectedRows={selectedRows}
          setSelectedRows={setSelectedRows}
          currentPage={currentPage}
          setCurrentPage={setCurrentPage}
          rowsPerPage={rowsPerPage}
          setRowsPerPage={setRowsPerPage}
          searchQuery={searchQuery}
          setSearchQuery={setSearchQuery}
          onView={(data) => setDetailModal({ open: true, data })}
          onEdit={(data) => setFormModal({ open: true, mode: 'edit', data })}
          onDelete={handleDelete}
          onApprove={handleApprove}
          onReject={(data) => setRejectDialog({ open: true, data })}
          isLoading={isLoading}
        />
      </div>
      
      {/* Modals */}
      {detailModal.open && (
        <DetailModal
          data={detailModal.data}
          onClose={() => setDetailModal({ open: false, data: null })}
          onEdit={() => {
            setFormModal({ open: true, mode: 'edit', data: detailModal.data });
            setDetailModal({ open: false, data: null });
          }}
          onDelete={() => {
            handleDelete(detailModal.data.id);
            setDetailModal({ open: false, data: null });
          }}
        />
      )}
      
      {formModal.open && (
        <FormModal
          mode={formModal.mode}
          data={formModal.data}
          onClose={() => setFormModal({ open: false, mode: 'create', data: null })}
          onSubmit={(newData) => {
            if (formModal.mode === 'create') {
              setPengajuanData(prev => [newData, ...prev]);
              toast.success('Pengajuan berhasil dibuat');
            } else {
              setPengajuanData(prev => prev.map(p => p.id === newData.id ? newData : p));
              toast.success('Pengajuan berhasil diupdate');
            }
            setFormModal({ open: false, mode: 'create', data: null });
          }}
        />
      )}
      
      {deleteDialog.open && (
        <ConfirmDeleteDialog
          pengajuan={deleteDialog.data}
          onConfirm={confirmDelete}
          onCancel={() => setDeleteDialog({ open: false, data: null })}
        />
      )}
      
      {rejectDialog.open && (
        <RejectDialog
          pengajuan={rejectDialog.data}
          onSubmit={(alasan) => handleReject(rejectDialog.data.id, alasan)}
          onCancel={() => setRejectDialog({ open: false, data: null })}
        />
      )}
    </div>
  );
};

export default DashboardRKBMN;
```

---

## 📝 FINAL CHECKLIST

### ✅ Data & Logic
- [x] Interface TypeScript sesuai struktur tabel database
- [x] Sample data generator dengan 30 records realistis
- [x] Status mapping dengan 7 status
- [x] Utility functions lengkap (date, currency, filtering, sorting)
- [x] KPI calculations (6 metrics)
- [x] Chart data transformations

### ✅ UI Components  
- [x] Header dengan filters & actions
- [x] 6 KPI cards dengan sparklines
- [x] Trend line chart (dual-axis, toggle weekly/monthly)
- [x] Status donut chart dengan legend
- [x] Top 10 bagian bar chart (toggle metric)
- [x] Approval pipeline visualization
- [x] Time-to-resolve histogram
- [x] Alerts & notifications panel
- [x] Detailed data table dengan pagination
- [x] Detail modal (5 tabs)
- [x] Form pengajuanRetryClaude does not have the ability to run the code it generates yet.OContinue